services:
  # caddy:
  #   image: caddy:${CADDY_VERSION}
  #   restart: unless-stopped
  #   cap_add:
  #     - NET_ADMIN
  #   ports:
  #     - "80:2080"
  #     - "443:443"
  #     - "443:443/udp"
  #   volumes:
  #     - ${PWD}/Caddyfile:/etc/caddy/Caddyfile
  #     # - $PWD/site:/srv
  #     - caddy_data:/data
  #     - caddy_config:/config
  #   depends_on:
  #     - db
  api:
    build:
      context: .
      dockerfile: ./Dockerfiles/brag-server/Dockerfile
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./entrypoint.sh:/usr/local/bin/entrypoint.sh
    depends_on:
      - db
    secrets:
      - database_url
  db:
    image: "postgres:${POSTGRES_VERSION}"
    restart: always
    volumes:
      - ${DATA_PATH}:/var/lib/postgresql/data
      - ../migrations:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    healthcheck:
      test: psql -U ${POSTGRES_USER} -q -d ${POSTGRES_DB} -c "SELECT 'ready';"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    secrets:
      - postgres_password
secrets:
  postgres_password:
    environment: "POSTGRES_PASSWORD"
  database_url:
    environment: "DATABASE_URL"
volumes:
  caddy_data:
    external: true
  caddy_config:
