services:
  load_db:
    build:
      context: .
      dockerfile: Dockerfile-load_db
      args:
        - RUST_VERSION=${RUST_VERSION}
    restart: always
    entrypoint: /entrypoint.sh
    depends_on:
      - db
    secrets:
      - database_url
  brag-server:
    build:
      context: .
      dockerfile: Dockerfile-brag-server
      args:
        - RUST_VERSION=${RUST_VERSION}
    restart: always
    # ports:
    #   - "${API_PORT}:${API_PORT}"
    environment:
      - API_PORT
    entrypoint: /entrypoint.sh
    depends_on:
      - db
    secrets:
      - database_url
  db:
    image: "postgres:${POSTGRES_VERSION}"
    restart: always
    volumes:
      - ${DATA_PATH}:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    # ports:
    #   - "${DB_PORT}:${DB_PORT}"
    environment:
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    healthcheck:
      test: psql -U ${POSTGRES_USER} -q -d ${POSTGRES_DB} -c "SELECT 'ready';"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    secrets:
      - postgres_password
networks:
  default:
    external: true
    name: npm_net
secrets:
  postgres_password:
    environment: "POSTGRES_PASSWORD"
  database_url:
    environment: "DATABASE_URL"
